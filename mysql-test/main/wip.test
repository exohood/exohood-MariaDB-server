CREATE TABLE t1 (i INT, j INT);
CREATE INDEX i1 ON t1(i);
CREATE INDEX i2 ON t1(j);

--echo
--echo # empty hint comment is ok:
--echo
SELECT /*+*/ 1;
SELECT /*+ */ 1;
SELECT /*+ * ** / // /* */ 1;
SELECT /*+ @ */ 1;
SELECT /*+ @foo */ 1;
SELECT /*+ foo@bar */ 1;
SELECT /*+ foo @bar */ 1;
SELECT /*+ `@` */ 1;
SELECT /*+ `@foo` */ 1;
SELECT /*+ `foo@bar` */ 1;
SELECT /*+ `foo @bar` */ 1;
SELECT /*+ DEBUG_HINT1( @) */ 1;
SELECT /*+ DEBUG_HINT1( @) */ 1;
SELECT /*+ DEBUG_HINT1(t1 @) */ 1;


--echo
--echo # We don't support "*/" inside quoted identifiers (syntax error):
--echo

--error ER_PARSE_ERROR
SELECT /*+ DEBUG_HINT(`test*/`) */ 1;

#
# disabled test because of mysqltest bug #19785832
# see test_wl8016() at mysql_client_test.c for the workaround
#
#--echo # should just warn:
#SELECT /*+ DEBUG_HINT(`test*/ 1;

--echo
--echo # valid hint sequences:
--echo
SELECT  /*+ DEBUG_HINT2() */ 1;
SELECT  /*+DEBUG_HINT2()*/ 1;
SELECT  /*+ DEBUG_HINT2 () */ 1;
SELECT  /*+ DEBUG_HINT2 (  ) */ 1;

SELECT  /*+ DEBUG_HINT2() */ 1 UNION SELECT 1;
(SELECT /*+ DEBUG_HINT2() */ 1) UNION (SELECT 1);
((SELECT  /* + DEBUG_HINT2() */ 1));

UPDATE  /*+ DEBUG_HINT2() */ t1 SET i = 10;
INSERT  /*+ DEBUG_HINT2() */ INTO t1 VALUES ();
REPLACE /*+ DEBUG_HINT2() */ INTO t1 VALUES ();
DELETE  /*+ DEBUG_HINT2() */ FROM t1 WHERE 1;

SELECT /*+ DEBUG_HINT1(t1) */    1 FROM t1;
SELECT /*+ DEBUG_HINT1(a b) */   1 FROM t1 a, t1 b;

SELECT /*+ DEBUG_HINT2(i1) */ 1 FROM t1;
SELECT /*+ DEBUG_HINT2(i1 i2) */ 1 FROM t1;

--echo #
--echo # test explainable statements for hint support:
--echo # they should warn with a hint syntax error near "test */"
--echo #

EXPLAIN SELECT /*+ test */ 1;
EXPLAIN INSERT /*+ test */ INTO t1 VALUES (10, 10);
EXPLAIN REPLACE /*+ test */ INTO t1 VALUES (10, 10);
EXPLAIN UPDATE /*+ test */ t1 SET i = 10 WHERE j = 10;
EXPLAIN DELETE /*+ test */ FROM t1 WHERE i = 10;

--echo
--echo # non-alphabetic and non-ASCII identifiers:
--echo

CREATE INDEX 3rd_index ON t1(i, j);
SELECT /*+ DEBUG_HINT2(3rd_index) */ 1 FROM t1;

CREATE INDEX $index ON t1(j, i);
SELECT /*+ DEBUG_HINT2($index) */ 1 FROM t1;

CREATE TABLE ` quoted name тест` (i INT);
SELECT /*+ DEBUG_HINT1(` quoted name тест`) */ 1 FROM t1;
SELECT /*+ DEBUG_HINT1(` quoted name тест`@`select#1`) */ 1 FROM t1;
DROP TABLE ` quoted name тест`;

SET SQL_MODE = 'ANSI_QUOTES';

# OLEGS: uncomment
CREATE TABLE " quoted name тест" (i INT);
# SELECT /*+ DEBUG_HINT1(" quoted name тест") */ 1 FROM t1;
# SELECT /*+ DEBUG_HINT1(" quoted name тест"@"select#1") */ 1 FROM t1;

CREATE TABLE `test1``test2``` (i INT);

SELECT /*+ DEBUG_HINT1(`test1``test2```) */ 1;
SELECT /*+ DEBUG_HINT1("test1""test2""") */ 1;

SET SQL_MODE = '';
--echo # should warn:
# OLEGS: uncomment
# SELECT /*+ DEBUG_HINT1(" quoted name тест") */ 1 FROM t1;

DROP TABLE ` quoted name тест`;
DROP TABLE `test1``test2```;

SET NAMES utf8;

CREATE TABLE tableТ (i INT);
SELECT /*+ DEBUG_HINT1(tableТ) */ 1 FROM t1;
SELECT /*+ DEBUG_HINT1(test@tableТ) */ 1 FROM t1;
DROP TABLE tableТ;

CREATE TABLE таблица (i INT);

# OLEGS: uncomment
# SELECT /*+ DEBUG_HINT1(`таблица`) */ 1 FROM t1;
# SELECT /*+ DEBUG_HINT1(таблица) */ 1 FROM t1;
# SELECT /*+ DEBUG_HINT1(test@таблица) */ 1 FROM t1;

--echo # broken multibyte char, should warn:
SELECT /*+ DEBUG_HINT1(`�`) */ 1 FROM t1;

DROP TABLE таблица;

--echo
--echo # test the MAX_EXECUTION_TIME hint for SELECT statements:
--echo

INSERT INTO t1 VALUES (1, 1), (2, 2);

# OLEGS: uncomment or remove 
# --error ER_QUERY_TIMEOUT
# SELECT /*+ MAX_EXECUTION_TIME(1) */ *, SLEEP(1000) FROM t1;
# --error ER_QUERY_TIMEOUT
# SELECT  /*+ MAX_EXECUTION_TIME(1) */ *, SLEEP(1000) FROM t1 UNION SELECT 1, 2, 3;
# --error ER_QUERY_TIMEOUT
# (SELECT /*+ MAX_EXECUTION_TIME(1) */ *, SLEEP(1000) FROM t1) UNION (SELECT 1, 2, 3);
# --error ER_QUERY_TIMEOUT
# ((SELECT  /*+ MAX_EXECUTION_TIME(1) */ *, SLEEP(1000) FROM t1));

--echo
--echo # only SELECT statements supports the MAX_EXECUTION_TIME hint (warning):
--echo
CREATE TABLE t2 (i INT);
# INSERT /*+ MAX_EXECUTION_TIME(1) */ INTO t2 SELECT 1;
# REPLACE /*+ MAX_EXECUTION_TIME(1) */ INTO t2 SELECT 1;
# UPDATE /*+ MAX_EXECUTION_TIME(1) */ t2 SET i = 1;
# DELETE /*+ MAX_EXECUTION_TIME(1) */ FROM t2 WHERE i = 1;

--echo
--echo # derived tables and other subqueries:
--echo

SELECT * FROM (SELECT /*+ DEBUG_HINT3 */ 1) a;
SELECT (SELECT /*+ DEBUG_HINT3 */ 1);
SELECT 1 FROM DUAL WHERE 1 IN (SELECT /*+ DEBUG_HINT3 */ 1);

--echo
--echo # invalid hint sequences (should warn):
--echo
SELECT /*+ 10 */ 1;
SELECT /*+ DEBUG_HINT1() */ 1;
SELECT /*+ DEBUG_HINT1(10) */ 1;
SELECT /*+ DEBUG_HINT1( */ 1;
SELECT /*+ DEBUG_HINT1) */ 1;
SELECT /*+ DEBUG_HINT1(t1 */ 1;
SELECT /*+ DEBUG_HINT1(t1 ( */ 1;
(SELECT 1) UNION (SELECT /*+ DEBUG_HINT2() */ 1);

--echo
--echo # wrong place for hint, so recognize that stuff as a regular commentary:
--echo

SELECT 1 FROM /*+ regular commentary, not a hint! */ t1;
SELECT 1 FROM /*+ #1 */ t1 WHERE /*+ #2 */ 1 /*+ #3 */;

SELECT /*+ DEBUG_HINT2() */ 1
  FROM /*+ regular commentary, not a hint! */ t1;

DROP TABLE t1, t2;

--error ER_PARSE_ERROR
SELECT /*+ 10;
# PLEASE DON'T INSERT NEW STUFF TREE: WE ARE TESTING UNBALANCED COMMENTARY
# END OF FILE
